worker_processes 1;

#全局错误日志
error_log /logs/error.log;
error_log /logs/notice.log notice;
error_log /logs/info.log info;

# #PID文件，记录当前启动的nginx的进程ID
# pid D:/Tools/nginx-1.10.1/logs/nginx.pid;

#工作模式及连接数上限
events {
    worker_connections 1024; #单个后台worker process进程的最大并发链接数
}


#设定http服务器，利用它的反向代理功能提供负载均衡支持
http {
    #设定mime类型(邮件支持类型),类型由mime.types文件定义
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    gzip on;
    gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/javascript image/jpeg image/gif image/png;
    gzip_vary on;

    upstream backend {
        server backend:7777;
    }

    #设定日志
    log_format main '[$remote_addr] - [$remote_user] [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /logs/access.log main;
    rewrite_log on;

    #sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，
    sendfile on;

    #连接超时时间
    keepalive_timeout 120;
    tcp_nodelay on;

    server {
        listen 80;
        # 强制HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 default;

        ssl_certificate /etc/ssl/robertchaw.me.pem;
        ssl_certificate_key /etc/ssl/robertchaw.me.key;

        return 403;
    }

    server {
        listen 443 ssl;

        server_name robertchaw.me;

        ssl_certificate /etc/ssl/robertchaw.me.pem;
        ssl_certificate_key /etc/ssl/robertchaw.me.key;

        root /var/www/html/client;

        location / {
            try_files $uri $uri/index.html /index.html;
        }

        location /api/ {
            proxy_pass http://backend;
        }
    }

    server {
        listen 443 ssl;
        server_name admin.robertchaw.me 127.0.0.1;

        ssl_certificate /etc/ssl/admin.robertchaw.me.pem;
        ssl_certificate_key /etc/ssl/admin.robertchaw.me.key;

        root /var/www/html/admin;

        location / {
            try_files $uri $uri/index.html /index.html;
        }

        location /api/ {
            proxy_pass http://backend;
        }
    }

}
