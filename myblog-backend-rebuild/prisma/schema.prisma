// datasource db {
//   url      = "file:./dev.db"
//  provider = "sqlite"
// }

datasource db {
  url      = env("DB_URL")
  provider = "mysql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  username  String    @unique @default(uuid())
  name      String
  password  String    @default(uuid())
  isAdmin   Boolean   @default(false)
  avatar    String
  githubId  Int       @unique
  url       String
  isBanned  Boolean   @default(false)
  comment   Comment[]
}

//model UserFromGitHub {
//  id        Int      @id @default(autoincrement())
// createdAt DateTime @default(now())
//  updatedAt DateTime @updatedAt
// githubId  Int      @unique
// name      String
//  url       String
//  userId    Int      @unique
// user      User     @relation(fields: [userId], references: [id])
//}

model Article {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  title       String
  content     String    @db.Text
  description String    @db.Text
  viewCount   Int       @default(0)
  comments    Comment[]
  tags        Tag[]
  type        String    @default("normal") //normal about
}

model Tag {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  title     String    @unique
  article   Article[]
}

model Comment {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  message   String    @db.Text
  articleId Int
  article   Article   @relation(fields: [articleId], references: [id], onDelete: Cascade)
  parentId  Int?
  parent    Comment?  @relation("comments", fields: [parentId], references: [id], onDelete: Cascade)
  children  Comment[] @relation("comments")
  rootId    Int?
  root      Comment?  @relation("relations", fields: [rootId], references: [id], onDelete: Cascade)
  nodes     Comment[] @relation("relations")
}
